// <auto-generated />
using System;
using CurrencyWeb.Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CurrencyWeb.DAL.Migrations
{
    [DbContext(typeof(CurrencyContext))]
    [Migration("20230827230453_test4")]
    partial class test4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CurrencyWeb.Entities.Model.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("CurrencyWeb.Entities.Model.MoneyRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Buy")
                        .HasColumnType("double");

                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Sell")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId")
                        .IsUnique();

                    b.ToTable("MoneyRates");
                });

            modelBuilder.Entity("CurrencyWeb.Entities.Model.MoneyRate", b =>
                {
                    b.HasOne("CurrencyWeb.Entities.Model.Currency", "Currency")
                        .WithOne("MoneyRate")
                        .HasForeignKey("CurrencyWeb.Entities.Model.MoneyRate", "CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("CurrencyWeb.Entities.Model.Currency", b =>
                {
                    b.Navigation("MoneyRate")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
